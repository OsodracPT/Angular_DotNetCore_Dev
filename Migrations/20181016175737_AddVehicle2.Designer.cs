// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using angular_dotnet.Persistence;

namespace angulardotnet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20181016175737_AddVehicle2")]
    partial class AddVehicle2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("angular_dotnet.Models.Feature", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("features");
                });

            modelBuilder.Entity("angular_dotnet.Models.Make", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("makes");
                });

            modelBuilder.Entity("angular_dotnet.Models.Model", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("makeid");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("makeid");

                    b.ToTable("models");
                });

            modelBuilder.Entity("angular_dotnet.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("angular_dotnet.Models.Vehicle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("contact_email")
                        .HasMaxLength(255);

                    b.Property<string>("contact_name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("contact_phone")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("is_registered");

                    b.Property<DateTime>("last_update");

                    b.Property<int>("model_id");

                    b.Property<int?>("modelid");

                    b.HasKey("id");

                    b.HasIndex("modelid");

                    b.ToTable("vehicles");
                });

            modelBuilder.Entity("angular_dotnet.Models.VehicleFeature", b =>
                {
                    b.Property<int>("vehicleid");

                    b.Property<int>("featureid");

                    b.HasKey("vehicleid", "featureid");

                    b.HasIndex("featureid");

                    b.ToTable("vehiclefeatures");
                });

            modelBuilder.Entity("angular_dotnet.Models.Model", b =>
                {
                    b.HasOne("angular_dotnet.Models.Make", "make")
                        .WithMany("models")
                        .HasForeignKey("makeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("angular_dotnet.Models.Vehicle", b =>
                {
                    b.HasOne("angular_dotnet.Models.Model", "model")
                        .WithMany()
                        .HasForeignKey("modelid");
                });

            modelBuilder.Entity("angular_dotnet.Models.VehicleFeature", b =>
                {
                    b.HasOne("angular_dotnet.Models.Feature", "feature")
                        .WithMany()
                        .HasForeignKey("featureid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("angular_dotnet.Models.Vehicle", "vehicle")
                        .WithMany("features")
                        .HasForeignKey("vehicleid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
